// ========================================
// ArbiInvest - –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º—ã
// ========================================

export class ThemeManager {
    constructor() {
        this.currentTheme = 'dark';
        this.themes = {
            dark: {
                name: '–¢–µ–º–Ω–∞—è',
                class: 'theme-dark',
                colors: {
                    primary: '#0c0d0e',
                    secondary: '#151618',
                    accent: '#6366f1'
                }
            },
            light: {
                name: '–°–≤–µ—Ç–ª–∞—è',
                class: 'theme-light',
                colors: {
                    primary: '#ffffff',
                    secondary: '#f5f5f5',
                    accent: '#6366f1'
                }
            },
            auto: {
                name: '–°–∏—Å—Ç–µ–º–Ω–∞—è',
                class: 'theme-auto'
            }
        };
        
        this.init();
    }
    
    init() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
        const savedTheme = localStorage.getItem('arbi_theme') || 'dark';
        this.setTheme(savedTheme);
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        this.watchSystemTheme();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π —Ç–µ–º—ã
        this.bindToggleButtons();
    }
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
    setTheme(theme) {
        if (!this.themes[theme]) {
            theme = 'dark';
        }
        
        this.currentTheme = theme;
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã —Ç–µ–º
        Object.values(this.themes).forEach(t => {
            document.documentElement.classList.remove(t.class);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
        document.documentElement.classList.add(this.themes[theme].class);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç
        document.documentElement.setAttribute('data-theme', theme);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥ theme-color
        this.updateThemeColor(theme);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        localStorage.setItem('arbi_theme', theme);
        
        // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —Å–º–µ–Ω—ã —Ç–µ–º—ã
        this.dispatchThemeChange(theme);
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    toggleTheme() {
        const themes = Object.keys(this.themes);
        const currentIndex = themes.indexOf(this.currentTheme);
        const nextIndex = (currentIndex + 1) % themes.length;
        const nextTheme = themes[nextIndex];
        
        this.setTheme(nextTheme);
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
    getTheme() {
        return this.currentTheme;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
    isDark() {
        if (this.currentTheme === 'auto') {
            return window.matchMedia('(prefers-color-scheme: dark)').matches;
        }
        return this.currentTheme === 'dark';
    }
    
    // –°–ª–µ–∂–µ–Ω–∏–µ –∑–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π
    watchSystemTheme() {
        if (!window.matchMedia) return;
        
        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
        
        mediaQuery.addEventListener('change', (e) => {
            if (this.currentTheme === 'auto') {
                this.updateAutoTheme(e.matches);
            }
        });
        
        // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        if (this.currentTheme === 'auto') {
            this.updateAutoTheme(mediaQuery.matches);
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ–º—ã
    updateAutoTheme(isDark) {
        if (isDark) {
            document.documentElement.classList.add('theme-dark');
            document.documentElement.classList.remove('theme-light');
        } else {
            document.documentElement.classList.add('theme-light');
            document.documentElement.classList.remove('theme-dark');
        }
        
        this.updateThemeColor(isDark ? 'dark' : 'light');
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞-—Ç–µ–≥–∞ theme-color
    updateThemeColor(theme) {
        const metaThemeColor = document.querySelector('meta[name="theme-color"]');
        if (metaThemeColor) {
            const color = theme === 'dark' ? '#0c0d0e' : '#ffffff';
            metaThemeColor.setAttribute('content', color);
        }
    }
    
    // –ü—Ä–∏–≤—è–∑–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    bindToggleButtons() {
        const buttons = document.querySelectorAll('[data-theme-toggle]');
        
        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const theme = button.dataset.themeToggle;
                
                if (theme) {
                    this.setTheme(theme);
                } else {
                    this.toggleTheme();
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏
                this.updateButtonIcon(button);
            });
        });
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∫–Ω–æ–ø–∫–∏
    updateButtonIcon(button) {
        const icon = button.querySelector('.theme-icon');
        if (!icon) return;
        
        const icons = {
            dark: 'üåô',
            light: '‚òÄÔ∏è',
            auto: 'üåì'
        };
        
        icon.textContent = icons[this.currentTheme] || icons.dark;
    }
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è —Å–º–µ–Ω—ã —Ç–µ–º—ã
    dispatchThemeChange(theme) {
        const event = new CustomEvent('themechange', {
            detail: { theme }
        });
        
        window.dispatchEvent(event);
    }
    
    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤
    setCustomColors(colors) {
        const root = document.documentElement;
        
        Object.entries(colors).forEach(([key, value]) => {
            root.style.setProperty(`--color-${key}`, value);
        });
    }
    
    // –°–±—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤
    resetCustomColors() {
        const root = document.documentElement;
        const customProps = Array.from(root.style).filter(prop => prop.startsWith('--color-'));
        
        customProps.forEach(prop => {
            root.style.removeProperty(prop);
        });
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    getCSSVariable(variable) {
        return getComputedStyle(document.documentElement).getPropertyValue(variable).trim();
    }
    
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    setCSSVariable(variable, value) {
        document.documentElement.style.setProperty(variable, value);
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã —Ç–µ–º—ã
    animateThemeChange() {
        document.documentElement.classList.add('theme-transition');
        
        setTimeout(() => {
            document.documentElement.classList.remove('theme-transition');
        }, 300);
    }
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã
    preloadTheme(theme) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Ç–µ–º—ã
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —à—Ä–∏—Ñ—Ç—ã
    }
    
    // –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º—ã
    exportSettings() {
        return {
            theme: this.currentTheme,
            customColors: this.getCustomColors()
        };
    }
    
    // –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–µ–º—ã
    importSettings(settings) {
        if (settings.theme) {
            this.setTheme(settings.theme);
        }
        
        if (settings.customColors) {
            this.setCustomColors(settings.customColors);
        }
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤
    getCustomColors() {
        const root = document.documentElement;
        const customColors = {};
        
        Array.from(root.style).forEach(prop => {
            if (prop.startsWith('--color-')) {
                const key = prop.replace('--color-', '');
                customColors[key] = root.style.getPropertyValue(prop);
            }
        });
        
        return customColors;
    }
    
    // –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    destroy() {
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        const buttons = document.querySelectorAll('[data-theme-toggle]');
        buttons.forEach(button => {
            button.removeEventListener('click', this.toggleTheme);
        });
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default ThemeManager;
